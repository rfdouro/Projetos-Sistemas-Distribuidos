package br.org.rfdouro.p2pcliente;

import java.rmi.Naming;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author rfdouro
 */
public class FrameCliente extends javax.swing.JFrame {

 private static String host = "127.0.0.1";
 private static int porta = 1099;

 private String nomeCliente = null;
 private DefaultListModel listModel = new DefaultListModel();

 public FrameCliente() {
  initComponents();
  listaClientev.setModel(listModel);
 }

 private void conectarCliente() throws Exception {
  MensagensImpl impl = new MensagensImpl() {
   @Override
   public void enviamensagem(String mensagem) throws RemoteException {
    textArea.setText(textArea.getText() + "\n" + mensagem);
    try {
     listarClientes();
    } catch (Exception ex) {
     Logger.getLogger(FrameCliente.class.getName()).log(Level.SEVERE, null, ex);
    }
   }
  };
  nomeCliente = nomeClientetx.getText();
  Naming.rebind("rmi://" + host + "/cliente_" + nomeCliente, impl);
  nomeClientetx.setEditable(false);
  btnConectar.setEnabled(false);

  Registry reg = LocateRegistry.getRegistry("" + host + "", porta);
  listModel.clear();
  for (String x : reg.list()) {
   Mensagens chat = (Mensagens) Naming.lookup("rmi://" + host + "/" + x);
   if (chat != null) {
    chat.enviamensagem("de: " + nomeCliente + " conectado");
   }
  }
 }

 private void enviarMensagemCliente() throws Exception {
  String outro = listaClientev.getSelectedValue();
  if (outro == null) {
   // envia mensagem para todos os clientes
   //Registry reg = LocateRegistry.getRegistry();
   Registry reg = LocateRegistry.getRegistry("" + host + "", porta);
   listModel.clear();
   for (String x : reg.list()) {
    Mensagens chat = (Mensagens) Naming.lookup("rmi://" + host + "/" + x);
    if (chat != null) {
     String mensagem = txMensagem.getText();
     chat.enviamensagem("de: " + nomeCliente + " mensagem: " + mensagem);
    }
   }
   return;
  }
  //envia mensagem para um cliente espec√≠fico
  Mensagens chat = (Mensagens) Naming.lookup("rmi://" + host + "/" + outro);
  if (chat != null) {
   String mensagem = txMensagem.getText();
   chat.enviamensagem("de: " + nomeCliente + " mensagem: " + mensagem);
  }
 }

 private void listarClientes() throws Exception {
  //Registry reg = LocateRegistry.getRegistry();
  Registry reg = LocateRegistry.getRegistry("" + host + "", porta);
  listModel.clear();
  for (String x : reg.list()) {
   System.out.println(x);
   listModel.add(0, x);
  }
 }

 /**
  * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify
  * this code. The content of this method is always regenerated by the Form Editor.
  */
 @SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
 private void initComponents() {

  jScrollPane1 = new javax.swing.JScrollPane();
  textArea = new javax.swing.JTextArea();
  jLabel1 = new javax.swing.JLabel();
  nomeClientetx = new javax.swing.JTextField();
  btnConectar = new javax.swing.JButton();
  jLabel2 = new javax.swing.JLabel();
  txMensagem = new javax.swing.JTextField();
  jScrollPane2 = new javax.swing.JScrollPane();
  listaClientev = new javax.swing.JList<>();
  jLabel3 = new javax.swing.JLabel();
  jButton2 = new javax.swing.JButton();
  jButton1 = new javax.swing.JButton();

  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

  textArea.setColumns(20);
  textArea.setRows(5);
  jScrollPane1.setViewportView(textArea);

  jLabel1.setText("Seu nome");

  btnConectar.setText("Conectar");
  btnConectar.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    btnConectarActionPerformed(evt);
   }
  });

  jLabel2.setText("Mensagem");

  listaClientev.setModel(new javax.swing.AbstractListModel<String>() {
   String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
   public int getSize() { return strings.length; }
   public String getElementAt(int i) { return strings[i]; }
  });
  jScrollPane2.setViewportView(listaClientev);

  jLabel3.setText("Outros");

  jButton2.setText("Enviar");
  jButton2.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    jButton2ActionPerformed(evt);
   }
  });

  jButton1.setText("Atualizar");
  jButton1.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    jButton1ActionPerformed(evt);
   }
  });

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(layout.createSequentialGroup()
    .addContainerGap()
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addComponent(jScrollPane1)
     .addGroup(layout.createSequentialGroup()
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
       .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jLabel1)
         .addComponent(jLabel3))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(nomeClientetx)
         .addComponent(jScrollPane2)))
       .addGroup(layout.createSequentialGroup()
        .addComponent(jLabel2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(txMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)))
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
       .addComponent(btnConectar)
       .addComponent(jButton2)
       .addComponent(jButton1))
      .addGap(33, 33, 33)))
    .addContainerGap())
  );
  layout.setVerticalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
    .addContainerGap()
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(jLabel1)
     .addComponent(nomeClientetx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(btnConectar))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addComponent(jLabel3)
     .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(jButton1))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(jLabel2)
     .addComponent(txMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(jButton2))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
    .addContainerGap())
  );

  pack();
 }// </editor-fold>//GEN-END:initComponents

 private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
  try {
   conectarCliente();
  } catch (Exception ex) {
   Logger.getLogger(FrameCliente.class.getName()).log(Level.SEVERE, null, ex);
  }
 }//GEN-LAST:event_btnConectarActionPerformed

 private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  try {
   listarClientes();
  } catch (Exception ex) {
   Logger.getLogger(FrameCliente.class.getName()).log(Level.SEVERE, null, ex);
  }
 }//GEN-LAST:event_jButton1ActionPerformed

 private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  try {
   enviarMensagemCliente();
  } catch (Exception ex) {
   Logger.getLogger(FrameCliente.class.getName()).log(Level.SEVERE, null, ex);
  }
 }//GEN-LAST:event_jButton2ActionPerformed

 /**
  * @param args the command line arguments
  */
 public static void main(String args[]) {
  /* Set the Nimbus look and feel */
  //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
  /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
   */
  try {
   for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    if ("Nimbus".equals(info.getName())) {
     javax.swing.UIManager.setLookAndFeel(info.getClassName());
     break;
    }
   }
  } catch (ClassNotFoundException ex) {
   java.util.logging.Logger.getLogger(FrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (InstantiationException ex) {
   java.util.logging.Logger.getLogger(FrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (IllegalAccessException ex) {
   java.util.logging.Logger.getLogger(FrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  } catch (javax.swing.UnsupportedLookAndFeelException ex) {
   java.util.logging.Logger.getLogger(FrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  }
  //</editor-fold>

  try {
   //necess√°rio rodar no servidor
   LocateRegistry.createRegistry(porta);
  } catch (Exception ex) {
   System.err.println("J√° registrada a porta");
  }

  /* Create and display the form */
  java.awt.EventQueue.invokeLater(new Runnable() {
   public void run() {
    new FrameCliente().setVisible(true);
   }
  });
 }

 // Variables declaration - do not modify//GEN-BEGIN:variables
 private javax.swing.JButton btnConectar;
 private javax.swing.JButton jButton1;
 private javax.swing.JButton jButton2;
 private javax.swing.JLabel jLabel1;
 private javax.swing.JLabel jLabel2;
 private javax.swing.JLabel jLabel3;
 private javax.swing.JScrollPane jScrollPane1;
 private javax.swing.JScrollPane jScrollPane2;
 private javax.swing.JList<String> listaClientev;
 private javax.swing.JTextField nomeClientetx;
 private javax.swing.JTextArea textArea;
 private javax.swing.JTextField txMensagem;
 // End of variables declaration//GEN-END:variables
}
